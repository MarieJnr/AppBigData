version: "3"

services:
  # Hadoop NameNode
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9010:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env
    cpus: 1
    mem_limit: 2g
# Hadoop DataNode 
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9865:9864"  # Ensure different port if on the same host
    env_file:
      - ./hadoop.env
    cpus: 1
    mem_limit: 2g
# Second Hadoop DataNode Cluster 
  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: always
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      - SERVICE_PRECONDITION=namenode:9870
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9866:9864"  # Ensure different port if on the same host
    env_file:
      - ./hadoop.env
    cpus: 1
    mem_limit: 2g



  # Spark Master
  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    cpus: 1
    mem_limit: 2g
  # Spark Worker
  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-1
    ports:
      - "8081:8081"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    cpus: 2
    mem_limit: 4g
    # Spark Worker 2
  spark-worker-2:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-2
    ports:
      - "8082:8081"  
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    cpus: 2
    mem_limit: 4g
  # Hive Server
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    ports:
      - "10000:10000"
    environment:
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore
      - SERVICE_PRECONDITION=hive-metastore:9083
    env_file:
      - ./hadoop-hive.env
    cpus: 1
    mem_limit: 3g

  # Hive Metastore
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    command: /opt/hive/bin/hive --service metastore
    environment:
      - SERVICE_PRECONDITION=namenode:9870 datanode:9864 hive-metastore-postgresql:5432
    ports:
      - "9083:9083"
    env_file:
      - ./hadoop-hive.env

  # Hive Metastore PostgreSQL
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  # Jupyter Notebook
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - PYSPARK_DRIVER_PYTHON=ipython
      - PYSPARK_DRIVER_PYTHON_OPTS=notebook
    cpus: 1
    mem_limit: 2g
# Apache Superset
  superset:
    image: apache/superset
    container_name: superset
    depends_on:
      - hive-server
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
    ports:
      - "8088:8088"
    volumes:
      - superset-data:/home/superset
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    # Reste de la configuration
    cpus: 1
    mem_limit: 2g
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_datanode2:
  hadoop_historyserver:
  superset-data:



